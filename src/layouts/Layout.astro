---
import { siteConfig } from '../data/site-config';

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  article?: boolean;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title = siteConfig.name,
  description = siteConfig.description,
  image = siteConfig.ogImage,
  article = false,
} = Astro.props;

const siteTitle = title === siteConfig.name ? title : `${title} | ${siteConfig.name}`;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{siteTitle}</title>
    <meta name="title" content={siteTitle} />
    <meta name="description" content={description} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={article ? "article" : "website"} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={siteTitle} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />
    
    <!-- Theme Support -->
    <script is:inline>
      // Prevent flash of unstyled content
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');
        
        document.documentElement.classList.add(theme);
        document.documentElement.setAttribute('data-theme', theme);
      })();
    </script>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
  </head>
  
  <body class="min-h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-white antialiased transition-colors duration-300">
    <slot />
    
    <!-- I18n and Header Controls Scripts -->
    <script>
      // Initialize I18n
      import('../scripts/i18n.ts').then(() => {
        console.log('I18n initialized');
      }).catch(console.error);
    </script>
    
    <!-- Theme System -->
    <script is:inline>
      // Listen for system theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          const theme = e.matches ? 'dark' : 'light';
          document.documentElement.classList.remove('light', 'dark');
          document.documentElement.classList.add(theme);
          document.documentElement.setAttribute('data-theme', theme);
        }
      });
    </script>
  </body>
</html>

<style is:global>
  html {
    font-family: 'Ubuntu', system-ui, sans-serif;
  }
  
  body {
    margin: 0;
    padding: 0;
  }
  
  /* Dark mode specific styles */
  .dark {
    color-scheme: dark;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    @apply bg-gray-100 dark:bg-gray-800;
  }
  
  ::-webkit-scrollbar-thumb {
    @apply bg-gray-300 dark:bg-gray-600 rounded;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    @apply bg-gray-400 dark:bg-gray-500;
  }
  
  /* Smooth transitions for all elements */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
</style>
