---
import PageLayout from '../layouts/PageLayout.astro';
import { contactInfo, faqs } from '../data/contact';
import { getTranslation } from '../data/languages';
import ContactForm from '../components/ContactForm.tsx';

// Get user language from URL or default to English
const currentLang = Astro.url.pathname.split('/')[1] || 'en';
const t = getTranslation(currentLang);

// Fallback translations for missing keys
const fallbackTranslations = {
  contactInformation: 'Contact Information',
  generalInquiries: 'General Inquiries',
  generalInquiriesDesc: 'Questions about Snapbyte or general information',
  technicalSupport: 'Technical Support',
  technicalSupportDesc: 'Need help with integration or troubleshooting?',
  salesEnterprise: 'Sales & Enterprise',
  salesEnterpriseDesc: 'Interested in enterprise solutions or have questions about pricing?',
  phoneSupport: 'Phone Support',
  phoneSupportDesc: 'Prefer to talk? Give us a call',
  ourOffice: 'Our Office',
  sendMessage: 'Send Us a Message',
  nameLabel: 'Name',
  emailLabel: 'Email',
  companyLabel: 'Company',
  subjectLabel: 'Subject',
  messageLabel: 'Message',
  selectSubject: 'Select a subject',
  generalInquiry: 'General Inquiry',
  technicalSupportOption: 'Technical Support',
  salesPricing: 'Sales & Pricing',
  enterpriseSolutions: 'Enterprise Solutions',
  partnershipOpportunities: 'Partnership Opportunities',
  namePlaceholder: 'Your full name',
  emailPlaceholder: 'your@email.com',
  companyPlaceholder: 'Your company name',
  messagePlaceholder: 'Tell us how we can help you...',
  sendMessageButton: 'Send Message',
  messageSuccess: 'Thank you! Your message has been sent successfully.',
  messageError: 'Sorry, there was an error sending your message. Please try again.',
  sending: 'Sending...',
};

// Helper function to get translation with fallback
function getText(key: string): string {
  return (t as any)[key] || fallbackTranslations[key as keyof typeof fallbackTranslations] || key;
}

// Prepare translations for React component
const contactFormTranslations = {
  nameLabel: getText('nameLabel'),
  emailLabel: getText('emailLabel'),
  companyLabel: getText('companyLabel'),
  subjectLabel: getText('subjectLabel'),
  messageLabel: getText('messageLabel'),
  selectSubject: getText('selectSubject'),
  generalInquiry: getText('generalInquiry'),
  technicalSupportOption: getText('technicalSupportOption'),
  salesPricing: getText('salesPricing'),
  enterpriseSolutions: getText('enterpriseSolutions'),
  partnershipOpportunities: getText('partnershipOpportunities'),
  namePlaceholder: getText('namePlaceholder'),
  emailPlaceholder: getText('emailPlaceholder'),
  companyPlaceholder: getText('companyPlaceholder'),
  messagePlaceholder: getText('messagePlaceholder'),
  sendMessageButton: getText('sendMessageButton'),
  messageSuccess: getText('messageSuccess'),
  messageError: getText('messageError'),
  sending: getText('sending'),
};
---

<PageLayout 
  title={getText('contactTitle')}
  description={getText('contactDescription')}
>
  <!-- Hero Section -->
  <section class="py-20 bg-gray-50 dark:bg-gray-800 transition-colors duration-300">
    <div class="container mx-auto px-6 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6" data-i18n="contactTitle">
        {getText('contactTitle')}
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto" data-i18n="contactDescription">
        {getText('contactDescription')}
      </p>
    </div>
  </section>

  <!-- Contact Options -->
  <section class="py-20 bg-white dark:bg-gray-900 transition-colors duration-300">
    <div class="container mx-auto px-6">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
        <!-- Contact Information -->
        <div>
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8" data-i18n="contactInformation">
            {getText('contactInformation')}
          </h2>
          
          <div class="space-y-6">
            <!-- General -->
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg flex items-center justify-center flex-shrink-0">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1" data-i18n="generalInquiries">
                  {getText('generalInquiries')}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-2" data-i18n="generalInquiriesDesc">
                  {getText('generalInquiriesDesc')}
                </p>
                <a href={`mailto:${contactInfo.email}`} class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors duration-200">
                  {contactInfo.email}
                </a>
              </div>
            </div>

            <!-- Support -->
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-600 rounded-lg flex items-center justify-center flex-shrink-0">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M12 12h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
              <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1" data-i18n="technicalSupport">
                  {getText('technicalSupport')}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-2" data-i18n="technicalSupportDesc">
                  {getText('technicalSupportDesc')}
                </p>
                <a href={`mailto:${contactInfo.support}`} class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors duration-200">
                  {contactInfo.support}
                </a>
                <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{contactInfo.hours.support}</p>
              </div>
            </div>

            <!-- Sales -->
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-600 rounded-lg flex items-center justify-center flex-shrink-0">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                </svg>
              </div>
              <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1" data-i18n="salesEnterprise">
                  {getText('salesEnterprise')}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-2" data-i18n="salesEnterpriseDesc">
                  {getText('salesEnterpriseDesc')}
                </p>
                <a href={`mailto:${contactInfo.sales}`} class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors duration-200">
                  {contactInfo.sales}
                </a>
                <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{contactInfo.hours.sales}</p>
              </div>
            </div>

            <!-- Phone -->
            <div class="flex items-start space-x-4">
              <div class="w-12 h-12 bg-gradient-to-r from-yellow-500 to-orange-600 rounded-lg flex items-center justify-center flex-shrink-0">
                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                </svg>
              </div>
              <div>
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1" data-i18n="phoneSupport">
                  {getText('phoneSupport')}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 mb-2" data-i18n="phoneSupportDesc">
                  {getText('phoneSupportDesc')}
                </p>
                <a href={`tel:${contactInfo.phone}`} class="text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium transition-colors duration-200">
                  {contactInfo.phone}
                </a>
              </div>
            </div>
          </div>

          <!-- Office Address -->
          <div class="mt-12 p-6 bg-gray-50 dark:bg-gray-800 rounded-xl transition-colors duration-300">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4" data-i18n="ourOffice">
              {getText('ourOffice')}
            </h3>
            <address class="text-gray-600 dark:text-gray-300 not-italic">
              {contactInfo.address.street}<br>
              {contactInfo.address.city}, {contactInfo.address.state} {contactInfo.address.zip}<br>
              {contactInfo.address.country}
            </address>
          </div>
        </div>

        <!-- Contact Form -->
        <div>
          <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-8" data-i18n="sendMessage">
            {getText('sendMessage')}
          </h2>
          
          <!-- React Contact Form Component -->
          <ContactForm client:load translations={contactFormTranslations} />
        </div>
      </div>
    </div>
  </section>
</PageLayout>
